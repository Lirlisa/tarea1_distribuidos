// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pedido.proto

/*
Package pedido is a generated protocol buffer package.

It is generated from these files:
	pedido.proto

It has these top-level messages:
	Producto
	Encargo
*/
package pedido

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type Estatus int32

const (
	Estatus_OK        Estatus = 0
	Estatus_PERDIDO   Estatus = 1
	Estatus_EN_CAMINO Estatus = 2
	Estatus_ERROR     Estatus = 3
)

var Estatus_name = map[int32]string{
	0: "OK",
	1: "PERDIDO",
	2: "EN_CAMINO",
	3: "ERROR",
}
var Estatus_value = map[string]int32{
	"OK":        0,
	"PERDIDO":   1,
	"EN_CAMINO": 2,
	"ERROR":     3,
}

func (x Estatus) String() string {
	return proto.EnumName(Estatus_name, int32(x))
}
func (Estatus) EnumDescriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type Producto struct {
	ID uint32 `protobuf:"varint,1,opt,name=ID,json=iD" json:"ID,omitempty"`
}

func (m *Producto) Reset()                    { *m = Producto{} }
func (m *Producto) String() string            { return proto.CompactTextString(m) }
func (*Producto) ProtoMessage()               {}
func (*Producto) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *Producto) GetID() uint32 {
	if m != nil {
		return m.ID
	}
	return 0
}

type Encargo struct {
	TipoLocal      string `protobuf:"bytes,1,opt,name=tipo_local,json=tipoLocal" json:"tipo_local,omitempty"`
	NombreProducto string `protobuf:"bytes,2,opt,name=nombre_producto,json=nombreProducto" json:"nombre_producto,omitempty"`
	Valor          uint32 `protobuf:"varint,3,opt,name=valor" json:"valor,omitempty"`
	Origen         string `protobuf:"bytes,4,opt,name=origen" json:"origen,omitempty"`
	Destino        string `protobuf:"bytes,5,opt,name=destino" json:"destino,omitempty"`
}

func (m *Encargo) Reset()                    { *m = Encargo{} }
func (m *Encargo) String() string            { return proto.CompactTextString(m) }
func (*Encargo) ProtoMessage()               {}
func (*Encargo) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *Encargo) GetTipoLocal() string {
	if m != nil {
		return m.TipoLocal
	}
	return ""
}

func (m *Encargo) GetNombreProducto() string {
	if m != nil {
		return m.NombreProducto
	}
	return ""
}

func (m *Encargo) GetValor() uint32 {
	if m != nil {
		return m.Valor
	}
	return 0
}

func (m *Encargo) GetOrigen() string {
	if m != nil {
		return m.Origen
	}
	return ""
}

func (m *Encargo) GetDestino() string {
	if m != nil {
		return m.Destino
	}
	return ""
}

func init() {
	proto.RegisterType((*Producto)(nil), "pedido.Producto")
	proto.RegisterType((*Encargo)(nil), "pedido.Encargo")
	proto.RegisterEnum("pedido.Estatus", Estatus_name, Estatus_value)
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for Interacciones service

type InteraccionesClient interface {
	Encargar(ctx context.Context, in *Encargo, opts ...grpc.CallOption) (*Encargo, error)
	EstadoEncargo(ctx context.Context, in *Producto, opts ...grpc.CallOption) (*Producto, error)
}

type interaccionesClient struct {
	cc *grpc.ClientConn
}

func NewInteraccionesClient(cc *grpc.ClientConn) InteraccionesClient {
	return &interaccionesClient{cc}
}

func (c *interaccionesClient) Encargar(ctx context.Context, in *Encargo, opts ...grpc.CallOption) (*Encargo, error) {
	out := new(Encargo)
	err := grpc.Invoke(ctx, "/pedido.Interacciones/Encargar", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *interaccionesClient) EstadoEncargo(ctx context.Context, in *Producto, opts ...grpc.CallOption) (*Producto, error) {
	out := new(Producto)
	err := grpc.Invoke(ctx, "/pedido.Interacciones/Estado_encargo", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for Interacciones service

type InteraccionesServer interface {
	Encargar(context.Context, *Encargo) (*Encargo, error)
	EstadoEncargo(context.Context, *Producto) (*Producto, error)
}

func RegisterInteraccionesServer(s *grpc.Server, srv InteraccionesServer) {
	s.RegisterService(&_Interacciones_serviceDesc, srv)
}

func _Interacciones_Encargar_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Encargo)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InteraccionesServer).Encargar(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pedido.Interacciones/Encargar",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InteraccionesServer).Encargar(ctx, req.(*Encargo))
	}
	return interceptor(ctx, in, info, handler)
}

func _Interacciones_EstadoEncargo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(Producto)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(InteraccionesServer).EstadoEncargo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/pedido.Interacciones/EstadoEncargo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(InteraccionesServer).EstadoEncargo(ctx, req.(*Producto))
	}
	return interceptor(ctx, in, info, handler)
}

var _Interacciones_serviceDesc = grpc.ServiceDesc{
	ServiceName: "pedido.Interacciones",
	HandlerType: (*InteraccionesServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Encargar",
			Handler:    _Interacciones_Encargar_Handler,
		},
		{
			MethodName: "Estado_encargo",
			Handler:    _Interacciones_EstadoEncargo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "pedido.proto",
}

func init() { proto.RegisterFile("pedido.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 284 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x64, 0x90, 0xc1, 0x4a, 0xf3, 0x40,
	0x14, 0x85, 0x9b, 0xf4, 0x6f, 0xd2, 0xdc, 0xdf, 0xb6, 0xe1, 0x22, 0x32, 0x14, 0x04, 0xc9, 0x46,
	0x71, 0xd1, 0x85, 0x82, 0xb8, 0x15, 0x93, 0x45, 0x50, 0x9b, 0x32, 0x2f, 0x10, 0xa6, 0xc9, 0x50,
	0x06, 0xea, 0xdc, 0x30, 0x99, 0xea, 0xb3, 0xf8, 0xb6, 0x92, 0x49, 0xe2, 0x42, 0x97, 0xe7, 0x9b,
	0x33, 0xf7, 0x70, 0x0e, 0x9c, 0x35, 0xb2, 0x56, 0x35, 0x6d, 0x1a, 0x43, 0x96, 0x30, 0xe8, 0x55,
	0xb2, 0x86, 0xf9, 0xce, 0x50, 0x7d, 0xaa, 0x2c, 0xe1, 0x12, 0xfc, 0x3c, 0x65, 0xde, 0x95, 0x77,
	0xb3, 0xe0, 0xbe, 0x4a, 0x93, 0x2f, 0x0f, 0xc2, 0x4c, 0x57, 0xc2, 0x1c, 0x08, 0x2f, 0x01, 0xac,
	0x6a, 0xa8, 0x3c, 0x52, 0x25, 0x8e, 0xce, 0x13, 0xf1, 0xa8, 0x23, 0xaf, 0x1d, 0xc0, 0x6b, 0x58,
	0x69, 0x7a, 0xdf, 0x1b, 0x59, 0x36, 0xc3, 0x35, 0xe6, 0x3b, 0xcf, 0xb2, 0xc7, 0x3f, 0x19, 0xe7,
	0x30, 0xfb, 0x10, 0x47, 0x32, 0x6c, 0xea, 0x62, 0x7a, 0x81, 0x17, 0x10, 0x90, 0x51, 0x07, 0xa9,
	0xd9, 0x3f, 0xf7, 0x6b, 0x50, 0xc8, 0x20, 0xac, 0x65, 0x6b, 0x95, 0x26, 0x36, 0x73, 0x0f, 0xa3,
	0xbc, 0x7d, 0x84, 0x30, 0x6b, 0xad, 0xb0, 0xa7, 0x16, 0x03, 0xf0, 0x8b, 0x97, 0x78, 0x82, 0xff,
	0x21, 0xdc, 0x65, 0x3c, 0xcd, 0xd3, 0x22, 0xf6, 0x70, 0x01, 0x51, 0xb6, 0x2d, 0x9f, 0x9f, 0xde,
	0xf2, 0x6d, 0x11, 0xfb, 0x18, 0xc1, 0x2c, 0xe3, 0xbc, 0xe0, 0xf1, 0xf4, 0xee, 0x13, 0x16, 0xb9,
	0xb6, 0xd2, 0x88, 0xaa, 0x52, 0xa4, 0x65, 0x8b, 0x1b, 0x98, 0xf7, 0x2d, 0x85, 0xc1, 0xd5, 0x66,
	0x58, 0x69, 0xe8, 0xbd, 0xfe, 0x0d, 0x92, 0x09, 0x3e, 0xc0, 0xb2, 0x8b, 0xae, 0xa9, 0x94, 0xc3,
	0x38, 0xf1, 0x68, 0x1a, 0x6b, 0xae, 0xff, 0x90, 0x64, 0xb2, 0x0f, 0xdc, 0xf2, 0xf7, 0xdf, 0x01,
	0x00, 0x00, 0xff, 0xff, 0xff, 0x21, 0x36, 0x13, 0x89, 0x01, 0x00, 0x00,
}
